{"title":"Chart: When police use force, they rarely cause injury","markdown":{"yaml":{"title":"Chart: When police use force, they rarely cause injury","author":"Matt Ashby","date":"2019-11-25","slug":"use-of-force","categories":["Crime and justice chart of the week"],"tags":["police","criminal justice","use of force"]},"headingText":"custom packages not loaded by helpers.R","containsRefs":false,"markdown":"\n\n```{r set knitr options, include=FALSE}\nknitr::opts_chunk$set(cache = TRUE, include=FALSE)\n```\n\n```{r set chart parameters}\nchart_details <- list(\n\tid = \"use-of-force\",\n\ttitle = \"When police use force, they rarely cause injury\",\n\tsubtitle = \"Police reported using force on over 300,000 occasions last year, or about 850 each day, with most incidents involving either handcuffing or other restraint. Almost all force used by police resulted in no injury to the person force was used against. When officers did injure people, the injuries were usually minor. However, since these are new statistics there is likely to be some under-reporting, especially of minor incidents.\",\n\tsource_url = \"https://www.gov.uk/government/statistics/police-use-of-force-statistics-england-and-wales-april-2017-to-march-2018\",\n\tsource_title = \"Home Office, 2018\"\n)\n```\n\n```{r load packages and helper}\nlibrary(\"reticulate\")\n\n# load this after loading custom packages\nsource(here::here(\"helpers.R\"))\n```\n\n```{r get and tidy data}\nif (!file.exists(paste0(chart_details$id, \"-data.csv.gz\"))) {\n\t\n\t# download most-recent data\n\tnew_data_file <- tempfile(fileext = \".ods\")\n\tnew_csv_file <- paste0(new_data_file, \".csv\")\n\tGET(\"https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/764895/police-use-of-force-apr2017-mar2018-hosb3018-tables.ods\", write_disk(new_data_file))\n\t\n\t# convert new data from ODS to CSV and read\n\tsource_python(here::here(\"ods_to_csv.py\"))\n\tods_to_csv(new_data_file, \"Table_11\", new_csv_file)\n\ttidy_data <- new_csv_file %>% \n\t\tread_csv(skip = 4) %>% \n\t\tslice(1:6) %>% \n\t\tdrop_na() %>% \n\t\tgather(\"injury\", \"count\", -1) %>% \n\t\trename(injured = 1)\n\t\n\t# save tidy data\n\twrite_csv(tidy_data, paste0(chart_details$id, \"-data.csv.gz\"))\t\n\t\n} else {\n\t\n\t# load tidy data\n\ttidy_data <- read_csv(paste0(chart_details$id, \"-data.csv.gz\"))\n\t\n}\n```\n\n```{r prepare data for chart}\n\n# set number of columns in the chart grid, from which the number of rows will\n# be calculated\ncols <- 10\n\n# get total number of incidents\ntotal_incidents <- tidy_data %>% \n\tfilter(injured == \"Total incidents\", injury == \"Total incidents\") %>% \n\tpluck(\"count\", 1)\n\n# If `injured` == \"Yes\" then note the type of injury, if `injured` == \"No\" then\n# assume person not injured as a result of use of force, otherwise (i.e. \n# `injured` %in% c(\"Unknown\", \"Not reported\")) report as unknown\n\nchart_data <- tidy_data %>% \n\tmutate(category = case_when(\n\t\tinjured == \"Yes\" & injury == \"Minor\" ~ \"minor injury\",\n\t\tinjured == \"Yes\" & injury %in% c(\"Death\", \"Severe\") ~ \n\t\t\t\"severe injury or death\",\n\t\tinjured == \"Yes\" & injury == \"Not reported\" ~ \"not known if any injury\",\n\t\tinjured == \"No\" & injury == \"Total incidents\" ~ \"no injury\",\n\t\tinjured %in% c(\"Unknown\", \"Not reported\") & injury == \"Total incidents\" ~\n\t\t\t\"not known if any injury\",\n\t\tTRUE ~ NA_character_\n\t)) %>% \n\tdrop_na() %>% \n\tgroup_by(category) %>% \n\tsummarise(count = sum(count)) %>% \n\tmutate(\n\t\tcategory = ifelse(category == \"severe injury\", \"severe injury or death\",\n\t\t\t\t\t\t\t\t\t\t\tcategory),\n\t\tcategory = fct_relevel(fct_rev(factor(category)), \"no injury\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"minor injury\"),\n\t\tpermille = round((count / sum(count)) * 1000),\n\t\tlabel = paste0(category, \" (\", \n\t\t\t\t\t\t\t\t\t scales::number(permille, accuracy = 0.1, scale = 0.1, \n\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t suffix = \"%\"), \n\t\t\t\t\t\t\t\t\t \")\")\n\t) %>% \n\tarrange(category) %>% \n\t# as_factor() takes order from the data, which are sorted by category\n\tmutate(category = as_factor(label)) %>% \n\tuncount(.$permille) %>% \n\tselect(category) %>% \n\tgroup_by(category) %>% \n\tmutate(\n\t\tcell = row_number() - 1,\n\t\trow = floor(cell / (cols)),\n\t\tcol = cell - (row * cols)\n\t)\n\n# add chart labels\nchart_labels <- tribble(\n\t~x, ~y, ~xend, ~yend, ~category, ~label, ~hjust, ~vjust, ~curve,\n\t6, 7, 9, 8, \"minor injury (5.7%)\", balance_lines(\"minor injuries are those that only require simple first aid\", 2), \"left\", \"center\", \"right\",\n\t1, 1, 4, 4, \"severe injury or death (0.1%)\", balance_lines(\"about 400 recorded police uses of force resulted in severe injury (a fracture, deep cut or injury requiring formal admission to hospital) or death\", 2), \"left\", \"top\", \"right\",\n\t6, 5, 9, 5, \"not known if any injury (6.0%)\", balance_lines(\"these are experimental statistics, so some data are missing or unclear, possibly due to data-entry errors\", 2), \"left\", \"center\", \"right\"\n) %>% \n\t# order factor levels according to order in chart data, to maintain facet and\n\t# legend order\n\tmutate(category = factor(category, levels = levels(chart_data$category)))\n\n```\n\n```{r build plot}\nchart <- ggplot(chart_data, aes(x = row, y = col, fill = category)) + \n\tgeom_tile(colour = \"white\") + \n\t# add explanatory labels\n\tgeom_curve(aes(x = x, y = y, xend = xend, yend = yend),\n\t\t\t\t\t\t data = filter(chart_labels, curve == \"right\"), inherit.aes = FALSE, \n\t\t\t\t\t\t curvature = elements$label_line_curvature, \n\t\t\t\t\t\t colour = elements$label_line_colour, \n\t\t\t\t\t\t arrow = elements$label_arrow, show.legend = FALSE) +\n\tgeom_segment(aes(x = x, y = y, xend = xend, yend = yend),\n\t\t\t\t\t\t data = filter(chart_labels, curve == \"straight\"), \n\t\t\t\t\t\t inherit.aes = FALSE, colour = elements$label_line_colour, \n\t\t\t\t\t\t arrow = elements$label_arrow, show.legend = FALSE) +\n\tgeom_curve(aes(x = x, y = y, xend = xend, yend = yend),\n\t\t\t\t\t\t data = filter(chart_labels, curve == \"left\"), inherit.aes = FALSE, \n\t\t\t\t\t\t curvature = elements$label_line_curvature * -1, \n\t\t\t\t\t\t colour = elements$label_line_colour, \n\t\t\t\t\t\t arrow = elements$label_arrow, show.legend = FALSE) +\n\tgeom_label(aes(x = xend, y = yend, label = label, hjust = hjust, \n\t\t\t\t\t\t\t\t vjust = vjust),\n\t\t\t\t\t\tdata = chart_labels, inherit.aes = FALSE, \n\t\t\t\t\t\tcolour = elements$label_text_colour,\n\t\t\t\t\t\tfill = elements$label_text_fill, size = elements$label_text_size, \n\t\t\t\t\t\tlineheight = elements$label_text_lineheight,\n\t\t\t\t\t\tlabel.size = NA, show.legend = FALSE) +\n\t# end of explanatory labels\n\tscale_x_continuous(expand = c(0, 0), position = \"top\") +\n\tscale_y_reverse() +\n  scale_fill_manual(\n    values = unname(ucl_colours_list[c(\"Orange\", \"Light Blue\", \"Dark Green\",\n                                       \"Mid Purple\")])\n  ) +\n\tcoord_equal() + \n\tfacet_grid(rows = vars(category), labeller = label_wrap_gen(width = 10), \n\t\t\t\t\t\t switch = \"y\") + \n\tlabs(\n\t\ttitle = chart_details$title,\n\t\tsubtitle = format_subtitle(chart_details$subtitle),\n\t\tlegend = NULL,\n\t\tx = paste(\"each square represents 0.1% of recorded police uses of force in\",\n\t\t\t\t\t\t\t\"2017â€“18, or about\", \n\t\t\t\t\t\t\tscales::number(total_incidents / 1000, accuracy = 10, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t big.mark = \",\"), \"incidents\"),\n\t\ty = NULL\n\t) +\n\ttheme_cjcharts() +\n\ttheme(\n\t\taxis.line.y = element_line(colour = \"grey92\"),\n\t\taxis.text = element_blank(),\n\t\taxis.ticks = element_blank(),\n\t\taxis.title.x = element_text(hjust = 0),\n\t\taxis.title.y = element_text(hjust = 0.5),\n\t\tlegend.position = \"none\",\n\t\tpanel.grid = element_blank(),\n\t\tstrip.placement = \"outside\",\n\t\tstrip.text.y = element_text(angle = 180, hjust = 1)\n\t)\n\n```\n\n`r chart_details$subtitle`\n\n```{r display plot, echo=FALSE, include=TRUE}\nadd_logo(chart + labs(title = NULL, subtitle = NULL), \n\t\t\t\t chart_details$source_title, chart_details$id)\n```\n\n[larger image](../`r chart_details$id`.png)\n| [annotated R code to produce this chart](https://github.com/mpjashby/lesscrime.info/blob/master/content/post/`r chart_details$id`.Rmd)\n\nData source: [`r chart_details$source_title`](`r chart_details$source_url`)\n\n\n```{r export chart}\n# save PNG for social media\nggsave(\n\tfilename = paste0(chart_details$id, \".png\"), \n\tplot = add_logo(chart, chart_details$source_title, chart_details$id), \n\tdevice = \"png\", width = 600 / 72, height = 400 / 72, units = \"in\"\n)\n```\n","srcMarkdownNoYaml":"\n\n```{r set knitr options, include=FALSE}\nknitr::opts_chunk$set(cache = TRUE, include=FALSE)\n```\n\n```{r set chart parameters}\nchart_details <- list(\n\tid = \"use-of-force\",\n\ttitle = \"When police use force, they rarely cause injury\",\n\tsubtitle = \"Police reported using force on over 300,000 occasions last year, or about 850 each day, with most incidents involving either handcuffing or other restraint. Almost all force used by police resulted in no injury to the person force was used against. When officers did injure people, the injuries were usually minor. However, since these are new statistics there is likely to be some under-reporting, especially of minor incidents.\",\n\tsource_url = \"https://www.gov.uk/government/statistics/police-use-of-force-statistics-england-and-wales-april-2017-to-march-2018\",\n\tsource_title = \"Home Office, 2018\"\n)\n```\n\n```{r load packages and helper}\n# custom packages not loaded by helpers.R\nlibrary(\"reticulate\")\n\n# load this after loading custom packages\nsource(here::here(\"helpers.R\"))\n```\n\n```{r get and tidy data}\nif (!file.exists(paste0(chart_details$id, \"-data.csv.gz\"))) {\n\t\n\t# download most-recent data\n\tnew_data_file <- tempfile(fileext = \".ods\")\n\tnew_csv_file <- paste0(new_data_file, \".csv\")\n\tGET(\"https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/764895/police-use-of-force-apr2017-mar2018-hosb3018-tables.ods\", write_disk(new_data_file))\n\t\n\t# convert new data from ODS to CSV and read\n\tsource_python(here::here(\"ods_to_csv.py\"))\n\tods_to_csv(new_data_file, \"Table_11\", new_csv_file)\n\ttidy_data <- new_csv_file %>% \n\t\tread_csv(skip = 4) %>% \n\t\tslice(1:6) %>% \n\t\tdrop_na() %>% \n\t\tgather(\"injury\", \"count\", -1) %>% \n\t\trename(injured = 1)\n\t\n\t# save tidy data\n\twrite_csv(tidy_data, paste0(chart_details$id, \"-data.csv.gz\"))\t\n\t\n} else {\n\t\n\t# load tidy data\n\ttidy_data <- read_csv(paste0(chart_details$id, \"-data.csv.gz\"))\n\t\n}\n```\n\n```{r prepare data for chart}\n\n# set number of columns in the chart grid, from which the number of rows will\n# be calculated\ncols <- 10\n\n# get total number of incidents\ntotal_incidents <- tidy_data %>% \n\tfilter(injured == \"Total incidents\", injury == \"Total incidents\") %>% \n\tpluck(\"count\", 1)\n\n# If `injured` == \"Yes\" then note the type of injury, if `injured` == \"No\" then\n# assume person not injured as a result of use of force, otherwise (i.e. \n# `injured` %in% c(\"Unknown\", \"Not reported\")) report as unknown\n\nchart_data <- tidy_data %>% \n\tmutate(category = case_when(\n\t\tinjured == \"Yes\" & injury == \"Minor\" ~ \"minor injury\",\n\t\tinjured == \"Yes\" & injury %in% c(\"Death\", \"Severe\") ~ \n\t\t\t\"severe injury or death\",\n\t\tinjured == \"Yes\" & injury == \"Not reported\" ~ \"not known if any injury\",\n\t\tinjured == \"No\" & injury == \"Total incidents\" ~ \"no injury\",\n\t\tinjured %in% c(\"Unknown\", \"Not reported\") & injury == \"Total incidents\" ~\n\t\t\t\"not known if any injury\",\n\t\tTRUE ~ NA_character_\n\t)) %>% \n\tdrop_na() %>% \n\tgroup_by(category) %>% \n\tsummarise(count = sum(count)) %>% \n\tmutate(\n\t\tcategory = ifelse(category == \"severe injury\", \"severe injury or death\",\n\t\t\t\t\t\t\t\t\t\t\tcategory),\n\t\tcategory = fct_relevel(fct_rev(factor(category)), \"no injury\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"minor injury\"),\n\t\tpermille = round((count / sum(count)) * 1000),\n\t\tlabel = paste0(category, \" (\", \n\t\t\t\t\t\t\t\t\t scales::number(permille, accuracy = 0.1, scale = 0.1, \n\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t suffix = \"%\"), \n\t\t\t\t\t\t\t\t\t \")\")\n\t) %>% \n\tarrange(category) %>% \n\t# as_factor() takes order from the data, which are sorted by category\n\tmutate(category = as_factor(label)) %>% \n\tuncount(.$permille) %>% \n\tselect(category) %>% \n\tgroup_by(category) %>% \n\tmutate(\n\t\tcell = row_number() - 1,\n\t\trow = floor(cell / (cols)),\n\t\tcol = cell - (row * cols)\n\t)\n\n# add chart labels\nchart_labels <- tribble(\n\t~x, ~y, ~xend, ~yend, ~category, ~label, ~hjust, ~vjust, ~curve,\n\t6, 7, 9, 8, \"minor injury (5.7%)\", balance_lines(\"minor injuries are those that only require simple first aid\", 2), \"left\", \"center\", \"right\",\n\t1, 1, 4, 4, \"severe injury or death (0.1%)\", balance_lines(\"about 400 recorded police uses of force resulted in severe injury (a fracture, deep cut or injury requiring formal admission to hospital) or death\", 2), \"left\", \"top\", \"right\",\n\t6, 5, 9, 5, \"not known if any injury (6.0%)\", balance_lines(\"these are experimental statistics, so some data are missing or unclear, possibly due to data-entry errors\", 2), \"left\", \"center\", \"right\"\n) %>% \n\t# order factor levels according to order in chart data, to maintain facet and\n\t# legend order\n\tmutate(category = factor(category, levels = levels(chart_data$category)))\n\n```\n\n```{r build plot}\nchart <- ggplot(chart_data, aes(x = row, y = col, fill = category)) + \n\tgeom_tile(colour = \"white\") + \n\t# add explanatory labels\n\tgeom_curve(aes(x = x, y = y, xend = xend, yend = yend),\n\t\t\t\t\t\t data = filter(chart_labels, curve == \"right\"), inherit.aes = FALSE, \n\t\t\t\t\t\t curvature = elements$label_line_curvature, \n\t\t\t\t\t\t colour = elements$label_line_colour, \n\t\t\t\t\t\t arrow = elements$label_arrow, show.legend = FALSE) +\n\tgeom_segment(aes(x = x, y = y, xend = xend, yend = yend),\n\t\t\t\t\t\t data = filter(chart_labels, curve == \"straight\"), \n\t\t\t\t\t\t inherit.aes = FALSE, colour = elements$label_line_colour, \n\t\t\t\t\t\t arrow = elements$label_arrow, show.legend = FALSE) +\n\tgeom_curve(aes(x = x, y = y, xend = xend, yend = yend),\n\t\t\t\t\t\t data = filter(chart_labels, curve == \"left\"), inherit.aes = FALSE, \n\t\t\t\t\t\t curvature = elements$label_line_curvature * -1, \n\t\t\t\t\t\t colour = elements$label_line_colour, \n\t\t\t\t\t\t arrow = elements$label_arrow, show.legend = FALSE) +\n\tgeom_label(aes(x = xend, y = yend, label = label, hjust = hjust, \n\t\t\t\t\t\t\t\t vjust = vjust),\n\t\t\t\t\t\tdata = chart_labels, inherit.aes = FALSE, \n\t\t\t\t\t\tcolour = elements$label_text_colour,\n\t\t\t\t\t\tfill = elements$label_text_fill, size = elements$label_text_size, \n\t\t\t\t\t\tlineheight = elements$label_text_lineheight,\n\t\t\t\t\t\tlabel.size = NA, show.legend = FALSE) +\n\t# end of explanatory labels\n\tscale_x_continuous(expand = c(0, 0), position = \"top\") +\n\tscale_y_reverse() +\n  scale_fill_manual(\n    values = unname(ucl_colours_list[c(\"Orange\", \"Light Blue\", \"Dark Green\",\n                                       \"Mid Purple\")])\n  ) +\n\tcoord_equal() + \n\tfacet_grid(rows = vars(category), labeller = label_wrap_gen(width = 10), \n\t\t\t\t\t\t switch = \"y\") + \n\tlabs(\n\t\ttitle = chart_details$title,\n\t\tsubtitle = format_subtitle(chart_details$subtitle),\n\t\tlegend = NULL,\n\t\tx = paste(\"each square represents 0.1% of recorded police uses of force in\",\n\t\t\t\t\t\t\t\"2017â€“18, or about\", \n\t\t\t\t\t\t\tscales::number(total_incidents / 1000, accuracy = 10, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t big.mark = \",\"), \"incidents\"),\n\t\ty = NULL\n\t) +\n\ttheme_cjcharts() +\n\ttheme(\n\t\taxis.line.y = element_line(colour = \"grey92\"),\n\t\taxis.text = element_blank(),\n\t\taxis.ticks = element_blank(),\n\t\taxis.title.x = element_text(hjust = 0),\n\t\taxis.title.y = element_text(hjust = 0.5),\n\t\tlegend.position = \"none\",\n\t\tpanel.grid = element_blank(),\n\t\tstrip.placement = \"outside\",\n\t\tstrip.text.y = element_text(angle = 180, hjust = 1)\n\t)\n\n```\n\n`r chart_details$subtitle`\n\n```{r display plot, echo=FALSE, include=TRUE}\nadd_logo(chart + labs(title = NULL, subtitle = NULL), \n\t\t\t\t chart_details$source_title, chart_details$id)\n```\n\n[larger image](../`r chart_details$id`.png)\n| [annotated R code to produce this chart](https://github.com/mpjashby/lesscrime.info/blob/master/content/post/`r chart_details$id`.Rmd)\n\nData source: [`r chart_details$source_title`](`r chart_details$source_url`)\n\n\n```{r export chart}\n# save PNG for social media\nggsave(\n\tfilename = paste0(chart_details$id, \".png\"), \n\tplot = add_logo(chart, chart_details$source_title, chart_details$id), \n\tdevice = \"png\", width = 600 / 72, height = 400 / 72, units = \"in\"\n)\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","author":[{"name":"Matt Ashby"},"Matt Ashby"],"theme":["sandstone","../../custom.scss"],"date-format":"D MMM YYYY","title":"Chart: When police use force, they rarely cause injury","date":"2019-11-25","slug":"use-of-force","categories":["Crime and justice chart of the week"],"tags":["police","criminal justice","use of force"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}