{"title":"Chart: England & Wales has highest per-capita prison population in Western Europe","markdown":{"yaml":{"title":"Chart: England & Wales has highest per-capita prison population in Western Europe","author":"Matt Ashby","date":"2020-02-17","categories":["Crime and justice chart of the week"]},"headingText":"custom packages not loaded by helpers.R","containsRefs":false,"markdown":"\n\n```{r set knitr options, include=FALSE}\nknitr::opts_chunk$set(cache = TRUE, include=FALSE)\n```\n\n```{r set chart parameters}\nchart_details <- list(\n\tid = \"prison-europe\",\n\ttitle = \"England & Wales has highest per-capita prison population in Western Europe\",\n\tsubtitle = \"While Turkey has Europe's highest imprisonment rate, England and Wales locks up more people per 100,000 population than any other western European country.\",\n\tsource_url = \"https://ec.europa.eu/eurostat/data/database\",\n\tsource_title = \"Eurostat, 2019\"\n)\n```\n\n```{r load packages and helper}\nlibrary(\"eurostat\")\nlibrary(\"ggrepel\")\nlibrary(\"ggtext\")\nlibrary(\"rnaturalearth\")\nlibrary(\"sf\")\n\n# load this after loading custom packages\nsource(here::here(\"helpers.R\"))\n```\n\n```{r get and tidy data}\n\n# get severity score data\nif (!file.exists(paste0(chart_details$id, \"-data.csv.gz\"))) {\n\t\n\t# the eurostat package allows direct downloading from the Eurostat database,\n\t# so there is no need to download any data files\n \n\ttidy_data <- get_eurostat(\"crim_pris_cap\") %>% \n\t\tmutate_if(is.factor, as.character) %>% \n\t\tarrange(time, geo, indic_cr)\n\n\t# save tidy data\n\twrite_csv(tidy_data, paste0(chart_details$id, \"-data.csv.gz\"))\t\n\t\n} else {\n\t\n\t# load tidy data\n\ttidy_data <- read_csv(paste0(chart_details$id, \"-data.csv.gz\"))\n\t\n}\t\n\n# get European country outlines\nboundaries_uk <- ne_countries(\n\tscale = 10, \n\ttype = \"map_units\", \n\tcountry = \"United Kingdom\", \n\treturnclass = \"sf\"\n) %>% \n\tmutate(geo_code = recode(geounit, \"England\" = \"UKC-L\", \"Scotland\" = \"UKM\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"Wales\" = \"UKC-L\", \"Northern Ireland\" = \"UKN\")) %>% \n\tgroup_by(geo_code) %>% \n\tsummarise(name = first(geounit)) %>% \n\tmutate(name = ifelse(name == \"Wales\", \"England and Wales\", name))\n\nboundaries <- ne_countries(scale = 10, returnclass = \"sf\") %>% \n\t# the ISO 2A code for France is missing from the NE data, so we add manually\n\tmutate(\n\t\tiso_a2 = case_when(\n\t\t\tadmin == \"France\" ~ \"FR\", \n\t\t\tadmin == \"Norway\" ~ \"NO\",\n\t\t\tTRUE ~ iso_a2\n\t\t)\n\t) %>% \n\tfilter(iso_a2 != \"GB\") %>% \n\tselect(name = admin, geo_code = iso_a2) %>% \n\trbind(boundaries_uk)\n\n# get capital city co-ordinates\ncapitals_file <- tempfile(fileext = \".zip\")\ndownload.file(\"https://simplemaps.com/static/data/world-cities/basic/simplemaps_worldcities_basicv1.6.zip\",destfile = capitals_file)\nunzip(capitals_file, files = \"worldcities.csv\", exdir = tempdir())\ncapitals <- glue::glue(\"{tempdir()}/worldcities.csv\") %>% \n\tread_csv() %>% \n\tfilter(\n\t\t(\n\t\t\tcapital == \"primary\" | \n\t\t\t\t(city %in% c(\"Belfast\", \"Edinburgh\") & capital == \"admin\")\n\t\t) & \n\t\t\t!city %in% c(\"Amsterdam\")\n\t) %>% \n\tmutate(\n\t\tiso2 = case_when(\n\t\t\tcity == \"London\" ~ \"UKC-L\",\n\t\t\tcity == \"Edinburgh\" ~ \"UKM\",\n\t\t\tcity == \"Belfast\" ~ \"UKN\",\n\t\t\tTRUE ~ iso2\n\t\t)\n\t) %>% \n\tst_as_sf(coords = c(\"lng\", \"lat\"), crs = 4326) %>% \n\tst_transform(3035) %>% \n\tcbind(st_coordinates(.)) %>% \n\tst_set_geometry(NULL) %>% \n\tas_tibble() %>% \n\tclean_names()\n```\n\n```{r prepare data for chart}\nchart_data <- tidy_data %>% \n\tfilter(indic_cr == \"PRIS_ACT_CAP\", unit == \"P_HTHAB\") %>% \n\tgroup_by(geo) %>% \n\tfilter(time == last(time)) %>% \n\tungroup() %>% \n\tselect(-indic_cr, -unit) %>% \n\tright_join(boundaries, c(\"geo\" = \"geo_code\")) %>% \n\tleft_join(capitals, by = c(\"geo\" = \"iso2\")) %>% \n\tselect(name, geo, x, y, time, prison_rate = values, geometry) %>% \n\tfilter(\n\t\t!is.na(prison_rate) | \n\t\t\tgeo %in% c(\"AM\", \"AZ\", \"BY\", \"DZ\", \"EG\", \"GE\", \"GR\", \"IL\", \"IR\", \"IQ\", \n\t\t\t\t\t\t\t\t \"JO\", \"KW\", \"KZ\", \"LB\", \"LY\", \"MA\", \"MD\", \"RU\", \"PS\", \"SA\", \n\t\t\t\t\t\t\t\t \"SY\", \"TM\", \"TN\", \"TR\", \"UA\", \"UZ\")\n\t) %>% \n\t# remove Iceland because space is needed for the plot title\n\tfilter(geo != \"IS\") %>% \n\tst_as_sf(crs = 4326) %>% \n\tst_transform(3035) %>% \n\tclean_names() %>% \n\tmutate(\n\t\tcountry_code = case_when(\n\t\t\tgeo == \"UKC-L\" ~ \"E&W\",\n\t\t\tgeo == \"UKM\" ~ \"SCO\",\n\t\t\tgeo == \"UKN\" ~ \"NIR\",\n\t\t\tTRUE ~ geo\n\t\t),\n\t\tlabel = ifelse(\n\t\t\tis.na(prison_rate),\n\t\t\tNA,\n\t\t\tglue::glue(\"{country_code}: {scales::comma(prison_rate)}\")\n\t\t)\n\t)\n\n# set bounding box\nbounds <- ne_countries(scale = 10, continent = \"europe\", returnclass = \"sf\") %>% \n\tfilter(!admin %in% c(\"Russia\")) %>% \n\tpull(\"admin\") %>% \n\tne_states(returnclass = \"sf\") %>% \n\tfilter(\n\t\t!geonunit %in% c(\"Azores\", \"Svalbard\"),\n\t\t!name %in% c(\"Saba\", \"St. Eustatius\"),\n\t\t!region %in% c(\"Canary Is.\"),\n\t\ttype != \"Overseas dÃ©partement\"\n\t) %>% \n\tst_transform(3035) %>% \n\tst_bbox()\n\n# use Vaasa, Finland as the northern bounding box\nbounds_n <- c(21.07, 60) %>% \n\tst_point() %>% \n\tst_sfc() %>% \n\tst_sf(crs = 4326) %>% \n\tst_transform(3035) %>% \n\tst_bbox()\n\n# generate graticules manually because they will then extend beyond the plot \n# area once coord_sf(clip = \"off\") is set\ngraticules <- st_graticule(chart_data)\n```\n\n```{r build plot}\nchart <- ggplot(chart_data, aes(geometry = geometry)) +\n\t# geom_sf(data = graticules, colour = \"grey92\") +\n\tgeom_sf(aes(fill = prison_rate), size = 0.25) +\n\tgeom_label_repel(\n\t\taes(x = x, y = y, label = label), \n\t\tna.rm = TRUE,\n\t\tdata = filter(chart_data, !is.na(label) & \n\t\t\t\t\t\t\t\t\t\t!geo %in% c(\"AD\", \"LI\", \"SM\", \"VA\")), # \"ME\", \"MK\"\n\t\tcolour = elements$label_text_colour, \n\t\tfill = \"white\",\n\t\talpha = 0.75,\n\t\tsize = elements$label_text_size * 0.8, \n\t\tlabel.size = NA,\n\t\tlabel.padding = unit(0.15, \"lines\"),\n\t\tforce = 5,\n\t\tmin.segment.length = unit(0.25, \"lines\"),\n\t\tsegment.colour = \"grey80\",\n\t\tsegment.alpha = 0.85,\n\t\tarrow = arrow(length = unit(4, \"points\"))\n\t) +\n\tscale_fill_gradient(trans = \"log\",\n\t\tlow = \"white\", \n\t\thigh = ucl_colours_list[[\"Mid Red\"]], \n\t\tna.value = \"grey90\"\n\t) +\n\tcoord_sf(\n\t\texpand = FALSE,\n\t\txlim = c(bounds$xmin, bounds$xmax), \n\t\tylim = c(bounds$ymin, bounds_n$ymax),\n\t\tclip = \"off\",\n\t\tdefault = TRUE\n\t) +\n\tlabs(\n\t\ttitle = chart_details$title,\n\t\tsubtitle = chart_details$subtitle,\n\t\tlegend = NULL,\n\t\tx = NULL,\n\t\ty = NULL,\n\t\tfill = str_wrap(\"prisoners per 100,000 people (latest available year, log scale)\", 20)\n\t) +\n\ttheme_cjcharts() +\n\ttheme(\n\t\taxis.text = element_blank(),\n\t\tlegend.box.background = element_rect(colour = NA, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fill = rgb(1, 1, 1, 0.67)),\n\t\tlegend.justification = c(0.5, 1),\n\t\tlegend.position = c(1, 1),\n\t\tlegend.title.align = 0,\n\t\tpanel.grid = element_blank(),\n\t\tplot.title = element_textbox_simple(fill = rgb(1, 1, 1, 0.67), hjust = 0, vjust = 1, padding = margin(3, 3, 3, 3)),\n\t\tplot.subtitle = element_textbox_simple(fill = rgb(1, 1, 1, 0.67), hjust = 0, vjust = 1, margin = margin(24, 0, 0, 0), padding = margin(3, 3, 3, 3)),\n\t\tplot.title.position = \"plot\"\n\t)\n```\n\n`r chart_details$subtitle`\n\n```{r display plot, echo=FALSE, include=TRUE}\nadd_logo(\n\tchart + labs(title = NULL, subtitle = NULL) + \n\t\tcoord_sf(xlim = c(bounds$xmin, bounds$xmax), \n\t\t\t\t\t\t ylim = c(bounds$ymin, bounds_n$ymax), \n\t\t\t\t\t\t clip = \"on\") +\n\t\ttheme(legend.justification = c(1, 1)), \n\tchart_details$source_title, \n\tchart_details$id\n)\n```\n\n[larger image](../`r chart_details$id`.png)\n| [annotated R code to produce this chart](https://github.com/mpjashby/lesscrime.info/blob/master/content/post/`r chart_details$id`.Rmd)\n\nData source: [`r chart_details$source_title`](`r chart_details$source_url`) database tables `crim_pris_cap`.\n\n```{r export chart}\n# save PNG for social media\nggsave(\n\tfilename = paste0(chart_details$id, \".png\"), \n\tplot = add_logo(chart, chart_details$source_title, chart_details$id), \n\tdevice = \"png\", width = 600 / 72, height = 400 / 72, units = \"in\"\n)\n```\n","srcMarkdownNoYaml":"\n\n```{r set knitr options, include=FALSE}\nknitr::opts_chunk$set(cache = TRUE, include=FALSE)\n```\n\n```{r set chart parameters}\nchart_details <- list(\n\tid = \"prison-europe\",\n\ttitle = \"England & Wales has highest per-capita prison population in Western Europe\",\n\tsubtitle = \"While Turkey has Europe's highest imprisonment rate, England and Wales locks up more people per 100,000 population than any other western European country.\",\n\tsource_url = \"https://ec.europa.eu/eurostat/data/database\",\n\tsource_title = \"Eurostat, 2019\"\n)\n```\n\n```{r load packages and helper}\n# custom packages not loaded by helpers.R\nlibrary(\"eurostat\")\nlibrary(\"ggrepel\")\nlibrary(\"ggtext\")\nlibrary(\"rnaturalearth\")\nlibrary(\"sf\")\n\n# load this after loading custom packages\nsource(here::here(\"helpers.R\"))\n```\n\n```{r get and tidy data}\n\n# get severity score data\nif (!file.exists(paste0(chart_details$id, \"-data.csv.gz\"))) {\n\t\n\t# the eurostat package allows direct downloading from the Eurostat database,\n\t# so there is no need to download any data files\n \n\ttidy_data <- get_eurostat(\"crim_pris_cap\") %>% \n\t\tmutate_if(is.factor, as.character) %>% \n\t\tarrange(time, geo, indic_cr)\n\n\t# save tidy data\n\twrite_csv(tidy_data, paste0(chart_details$id, \"-data.csv.gz\"))\t\n\t\n} else {\n\t\n\t# load tidy data\n\ttidy_data <- read_csv(paste0(chart_details$id, \"-data.csv.gz\"))\n\t\n}\t\n\n# get European country outlines\nboundaries_uk <- ne_countries(\n\tscale = 10, \n\ttype = \"map_units\", \n\tcountry = \"United Kingdom\", \n\treturnclass = \"sf\"\n) %>% \n\tmutate(geo_code = recode(geounit, \"England\" = \"UKC-L\", \"Scotland\" = \"UKM\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t \"Wales\" = \"UKC-L\", \"Northern Ireland\" = \"UKN\")) %>% \n\tgroup_by(geo_code) %>% \n\tsummarise(name = first(geounit)) %>% \n\tmutate(name = ifelse(name == \"Wales\", \"England and Wales\", name))\n\nboundaries <- ne_countries(scale = 10, returnclass = \"sf\") %>% \n\t# the ISO 2A code for France is missing from the NE data, so we add manually\n\tmutate(\n\t\tiso_a2 = case_when(\n\t\t\tadmin == \"France\" ~ \"FR\", \n\t\t\tadmin == \"Norway\" ~ \"NO\",\n\t\t\tTRUE ~ iso_a2\n\t\t)\n\t) %>% \n\tfilter(iso_a2 != \"GB\") %>% \n\tselect(name = admin, geo_code = iso_a2) %>% \n\trbind(boundaries_uk)\n\n# get capital city co-ordinates\ncapitals_file <- tempfile(fileext = \".zip\")\ndownload.file(\"https://simplemaps.com/static/data/world-cities/basic/simplemaps_worldcities_basicv1.6.zip\",destfile = capitals_file)\nunzip(capitals_file, files = \"worldcities.csv\", exdir = tempdir())\ncapitals <- glue::glue(\"{tempdir()}/worldcities.csv\") %>% \n\tread_csv() %>% \n\tfilter(\n\t\t(\n\t\t\tcapital == \"primary\" | \n\t\t\t\t(city %in% c(\"Belfast\", \"Edinburgh\") & capital == \"admin\")\n\t\t) & \n\t\t\t!city %in% c(\"Amsterdam\")\n\t) %>% \n\tmutate(\n\t\tiso2 = case_when(\n\t\t\tcity == \"London\" ~ \"UKC-L\",\n\t\t\tcity == \"Edinburgh\" ~ \"UKM\",\n\t\t\tcity == \"Belfast\" ~ \"UKN\",\n\t\t\tTRUE ~ iso2\n\t\t)\n\t) %>% \n\tst_as_sf(coords = c(\"lng\", \"lat\"), crs = 4326) %>% \n\tst_transform(3035) %>% \n\tcbind(st_coordinates(.)) %>% \n\tst_set_geometry(NULL) %>% \n\tas_tibble() %>% \n\tclean_names()\n```\n\n```{r prepare data for chart}\nchart_data <- tidy_data %>% \n\tfilter(indic_cr == \"PRIS_ACT_CAP\", unit == \"P_HTHAB\") %>% \n\tgroup_by(geo) %>% \n\tfilter(time == last(time)) %>% \n\tungroup() %>% \n\tselect(-indic_cr, -unit) %>% \n\tright_join(boundaries, c(\"geo\" = \"geo_code\")) %>% \n\tleft_join(capitals, by = c(\"geo\" = \"iso2\")) %>% \n\tselect(name, geo, x, y, time, prison_rate = values, geometry) %>% \n\tfilter(\n\t\t!is.na(prison_rate) | \n\t\t\tgeo %in% c(\"AM\", \"AZ\", \"BY\", \"DZ\", \"EG\", \"GE\", \"GR\", \"IL\", \"IR\", \"IQ\", \n\t\t\t\t\t\t\t\t \"JO\", \"KW\", \"KZ\", \"LB\", \"LY\", \"MA\", \"MD\", \"RU\", \"PS\", \"SA\", \n\t\t\t\t\t\t\t\t \"SY\", \"TM\", \"TN\", \"TR\", \"UA\", \"UZ\")\n\t) %>% \n\t# remove Iceland because space is needed for the plot title\n\tfilter(geo != \"IS\") %>% \n\tst_as_sf(crs = 4326) %>% \n\tst_transform(3035) %>% \n\tclean_names() %>% \n\tmutate(\n\t\tcountry_code = case_when(\n\t\t\tgeo == \"UKC-L\" ~ \"E&W\",\n\t\t\tgeo == \"UKM\" ~ \"SCO\",\n\t\t\tgeo == \"UKN\" ~ \"NIR\",\n\t\t\tTRUE ~ geo\n\t\t),\n\t\tlabel = ifelse(\n\t\t\tis.na(prison_rate),\n\t\t\tNA,\n\t\t\tglue::glue(\"{country_code}: {scales::comma(prison_rate)}\")\n\t\t)\n\t)\n\n# set bounding box\nbounds <- ne_countries(scale = 10, continent = \"europe\", returnclass = \"sf\") %>% \n\tfilter(!admin %in% c(\"Russia\")) %>% \n\tpull(\"admin\") %>% \n\tne_states(returnclass = \"sf\") %>% \n\tfilter(\n\t\t!geonunit %in% c(\"Azores\", \"Svalbard\"),\n\t\t!name %in% c(\"Saba\", \"St. Eustatius\"),\n\t\t!region %in% c(\"Canary Is.\"),\n\t\ttype != \"Overseas dÃ©partement\"\n\t) %>% \n\tst_transform(3035) %>% \n\tst_bbox()\n\n# use Vaasa, Finland as the northern bounding box\nbounds_n <- c(21.07, 60) %>% \n\tst_point() %>% \n\tst_sfc() %>% \n\tst_sf(crs = 4326) %>% \n\tst_transform(3035) %>% \n\tst_bbox()\n\n# generate graticules manually because they will then extend beyond the plot \n# area once coord_sf(clip = \"off\") is set\ngraticules <- st_graticule(chart_data)\n```\n\n```{r build plot}\nchart <- ggplot(chart_data, aes(geometry = geometry)) +\n\t# geom_sf(data = graticules, colour = \"grey92\") +\n\tgeom_sf(aes(fill = prison_rate), size = 0.25) +\n\tgeom_label_repel(\n\t\taes(x = x, y = y, label = label), \n\t\tna.rm = TRUE,\n\t\tdata = filter(chart_data, !is.na(label) & \n\t\t\t\t\t\t\t\t\t\t!geo %in% c(\"AD\", \"LI\", \"SM\", \"VA\")), # \"ME\", \"MK\"\n\t\tcolour = elements$label_text_colour, \n\t\tfill = \"white\",\n\t\talpha = 0.75,\n\t\tsize = elements$label_text_size * 0.8, \n\t\tlabel.size = NA,\n\t\tlabel.padding = unit(0.15, \"lines\"),\n\t\tforce = 5,\n\t\tmin.segment.length = unit(0.25, \"lines\"),\n\t\tsegment.colour = \"grey80\",\n\t\tsegment.alpha = 0.85,\n\t\tarrow = arrow(length = unit(4, \"points\"))\n\t) +\n\tscale_fill_gradient(trans = \"log\",\n\t\tlow = \"white\", \n\t\thigh = ucl_colours_list[[\"Mid Red\"]], \n\t\tna.value = \"grey90\"\n\t) +\n\tcoord_sf(\n\t\texpand = FALSE,\n\t\txlim = c(bounds$xmin, bounds$xmax), \n\t\tylim = c(bounds$ymin, bounds_n$ymax),\n\t\tclip = \"off\",\n\t\tdefault = TRUE\n\t) +\n\tlabs(\n\t\ttitle = chart_details$title,\n\t\tsubtitle = chart_details$subtitle,\n\t\tlegend = NULL,\n\t\tx = NULL,\n\t\ty = NULL,\n\t\tfill = str_wrap(\"prisoners per 100,000 people (latest available year, log scale)\", 20)\n\t) +\n\ttheme_cjcharts() +\n\ttheme(\n\t\taxis.text = element_blank(),\n\t\tlegend.box.background = element_rect(colour = NA, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fill = rgb(1, 1, 1, 0.67)),\n\t\tlegend.justification = c(0.5, 1),\n\t\tlegend.position = c(1, 1),\n\t\tlegend.title.align = 0,\n\t\tpanel.grid = element_blank(),\n\t\tplot.title = element_textbox_simple(fill = rgb(1, 1, 1, 0.67), hjust = 0, vjust = 1, padding = margin(3, 3, 3, 3)),\n\t\tplot.subtitle = element_textbox_simple(fill = rgb(1, 1, 1, 0.67), hjust = 0, vjust = 1, margin = margin(24, 0, 0, 0), padding = margin(3, 3, 3, 3)),\n\t\tplot.title.position = \"plot\"\n\t)\n```\n\n`r chart_details$subtitle`\n\n```{r display plot, echo=FALSE, include=TRUE}\nadd_logo(\n\tchart + labs(title = NULL, subtitle = NULL) + \n\t\tcoord_sf(xlim = c(bounds$xmin, bounds$xmax), \n\t\t\t\t\t\t ylim = c(bounds$ymin, bounds_n$ymax), \n\t\t\t\t\t\t clip = \"on\") +\n\t\ttheme(legend.justification = c(1, 1)), \n\tchart_details$source_title, \n\tchart_details$id\n)\n```\n\n[larger image](../`r chart_details$id`.png)\n| [annotated R code to produce this chart](https://github.com/mpjashby/lesscrime.info/blob/master/content/post/`r chart_details$id`.Rmd)\n\nData source: [`r chart_details$source_title`](`r chart_details$source_url`) database tables `crim_pris_cap`.\n\n```{r export chart}\n# save PNG for social media\nggsave(\n\tfilename = paste0(chart_details$id, \".png\"), \n\tplot = add_logo(chart, chart_details$source_title, chart_details$id), \n\tdevice = \"png\", width = 600 / 72, height = 400 / 72, units = \"in\"\n)\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","author":[{"name":"Matt Ashby"},"Matt Ashby"],"theme":["sandstone","../../custom.scss"],"date-format":"D MMM YYYY","title":"Chart: England & Wales has highest per-capita prison population in Western Europe","date":"2020-02-17","categories":["Crime and justice chart of the week"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}