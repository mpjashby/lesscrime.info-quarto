{"title":"Most police forces are still handling higher crime-related demand","markdown":{"yaml":{"title":"Most police forces are still handling higher crime-related demand","author":"Matt Ashby","date":"2022-08-18","categories":["Crime and justice chart of the week"],"tags":["crime","crime pressure","crime severity","police"]},"headingText":"custom packages not loaded by helpers.R","containsRefs":false,"markdown":"\n\n```{r set knitr options, include=FALSE}\nknitr::opts_chunk$set(cache = FALSE, include=FALSE)\n```\n\n```{r set chart parameters}\nchart_details <- list(\n\tid = \"crime-pressure-force-2022\",\n\ttitle = \"Most police forces are still handling higher crime-related demand\",\n\tsubtitle = \"One way to understand crime-related demands on police forces is to track 'crime pressure', a measure of investigative workload representing the number of crimes reported to a force per officer, weighted according to Office for National Statistics estimates of the relative severity of different crimes. Over the past decade years, this measure has risen in every police force in England and Wales â€“ doubling in many places. Crime pressure is now falling due to higher officer numbers, but in almost all forces it remains higher than in 2010.\",\n\tsource_url = \"https://www.ons.gov.uk/peoplepopulationandcommunity/crimeandjustice/datasets/crimeseverityscoreexperimentalstatistics\",\n\tsource_title = \"Office for National Statistics, 2021\"\n)\n```\n\n```{r load packages and helper}\nlibrary(fable)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(janitor)\nlibrary(readxl)\nlibrary(tidyverse)\n\n# load this after loading custom packages\nsource(here::here(\"helpers.R\"))\n```\n\n```{r get and tidy data}\n\n# get severity score data\nif (!file.exists(paste0(chart_details$id, \"-data.csv.gz\"))) {\n  \n  # download data\n  # Source: https://www.ons.gov.uk/peoplepopulationandcommunity/crimeandjustice/datasets/crimeseverityscoreexperimentalstatistics\n  data_file <- tempfile(fileext = \".xls\")\n  download.file(\"https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/crimeandjustice/datasets/crimeseverityscoreexperimentalstatistics/current/datatool.xls\", destfile = data_file)\n  \n  # load data\n  file_data <- read_excel(data_file, sheet = \"Data - reg + pfa\", skip = 1)\n  \n  # tidy data\n  tidy_data <- file_data %>% \n    # extract only columns relevant to severity scores, not the adjacent table\n    # of offence rates\n    select(1:23) %>% \n    pivot_longer(c(-`Offence group`, -Code, -Name), names_to = \"year\", \n                 values_to = \"severity_score\") %>% \n    mutate(\n      # extract the month/year of the end of the data period\n      year_ending = str_trim(str_remove(str_extract(year, \"\\\\n.+?\\\\.{3}\"), \n                                        \"\\\\.{3}\")),\n      # convert this into a date\n      year_ending = parse_date(year_ending, format = \"%b '%y\"),\n      # convert date to final day of the month rather than the first\n      year_ending = year_ending + days_in_month(year_ending) - days(1)\n    ) %>% \n    # select(-year) %>% \n    clean_names()\n\t\n\t# save tidy data\n\twrite_csv(tidy_data, paste0(chart_details$id, \"-data.csv.gz\"))\t\n\t\n} else {\n\t\n\t# load tidy data\n\ttidy_data <- read_csv(paste0(chart_details$id, \"-data.csv.gz\"))\n\t\n}\t\n\n# get population data for local authorities, because population data aren't\n# published for police force areas\nif (!file.exists(paste0(chart_details$id, \"-pop-data.csv.gz\"))) {\n  \n  # download data\n  # Source: https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland\n  pop_data_file <- tempfile(fileext = \".xls\")\n  download.file(\"https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland/mid2020/ukpopestimatesmid2020on2021geography.xls\", destfile = pop_data_file)\n\n  # load data\n  pop_data <- pop_data_file %>% \n    read_excel(sheet = \"MYE 5\", skip = 7) %>% \n    janitor::clean_names() %>% \n    filter(\n      geography %in% c(\n        \"London Borough\", \"Metropolitan District\", \"Non-metropolitan District\", \n        \"Unitary Authority\"\n      )\n    ) %>% \n    select(code, name, starts_with(\"estimated_population_\")) %>% \n    pivot_longer(\n      cols = c(-code, -name), \n      names_to = \"year\", \n      values_to = \"population\", \n      names_prefix = \"estimated_population_mid_\"\n    )\n\n  # save tidy data\n\twrite_csv(pop_data, paste0(chart_details$id, \"-pop-data.csv.gz\"))\t\n  \n} else {\n\t\n\t# load tidy data\n\tpop_data <- read_csv(paste0(chart_details$id, \"-pop-data.csv.gz\"))\n\t\n}\n\n# load police numbers data\npolice_numbers <- here::here(\"post/police-uplift-2022/police-uplift-2022-data.csv.gz\") %>% \n  read_csv() %>% \n  # Filter only those rows that relate to counts in March of a year\n  filter(month(date) == 3) %>% \n  # Merge MPS and City Police because they're combined in the severity scores\n  mutate(\n    force_name = case_when(\n      force_name == \"Avon & Somerset\" ~ \"Avon and Somerset\",\n      force_name == \"Devon & Cornwall\" ~ \"Devon and Cornwall\",\n      force_name == \"London, City of\" ~ \"Metropolitan Police\",\n      TRUE ~ force_name\n    ),\n    year = year(date)\n  ) %>% \n  # Merge rows for each age/sex category\n  count(force_name, year, wt = total_fte, name = \"officers\")\n\n# get LAD to PFA lookup table\n# Source: https://geoportal.statistics.gov.uk/datasets/ons::local-authority-district-to-community-safety-partnerships-to-police-force-areas-december-2019-lookup-in-england-and-wales/about\npfa_lookup <- read_csv(\"https://opendata.arcgis.com/api/v3/datasets/66df1640526a4528a78736208daf83ed_0/downloads/data?format=csv&spatialRefId=4326&where=1%3D1\") %>%\n  clean_names() %>% \n  rename(la_code = lad18cd, pfa_code = pfa18cd, pfa_name = pfa18nm)\n```\n\n```{r prepare data for chart}\n# get population for police force areas\npfa_population <- pop_data %>% \n  left_join(pfa_lookup, by = c(\"code\" = \"la_code\")) %>% \n  # combine MPS and City Police because they're combined in the severity scores\n  mutate(\n    pfa_code = if_else(pfa_code == \"E23000034\", \"E23000001\", pfa_code),\n    pfa_name = if_else(pfa_name == \"London, City of\", \"Metropolitan Police\",\n                       pfa_name)\n  ) %>% \n  group_by(pfa_code, pfa_name, year) %>% \n  summarise(population = sum(population), .groups = \"drop\") %>% \n  # remove rows that represent Scottish/NI population, for which pfa18cd is NA\n  remove_missing(na.rm = TRUE) %>%\n  mutate(year = as.numeric(year))\n\nseverity <- tidy_data %>% \n  filter(\n    offence_group == \"Total recorded crime\",\n    # only severity estimates for police force areas\n    str_sub(code, 0, 3) %in% c(\"E23\", \"W15\"),\n    # exclude City Police, since its severity scores are included in the MPS\n    name != \"City of London\",\n    # only severity estimates for financial years\n    month(year_ending) == 3\n  ) %>% \n  select(code, name, year_ending, severity_score) %>% \n  mutate(severity_score = parse_number(severity_score))\n\nseverity_total <- severity %>% \n  # create a temporary column containing the year prior to year_ending, for\n  # matching to the appropriate *mid calendar year* population estimates\n  mutate(year_match = year(year_ending - years(1))) %>% \n  left_join(pfa_population, \n            by = c(\"code\" = \"pfa_code\", \"year_match\" = \"year\")) %>% \n  mutate(year_match = year_match + 1) %>% \n  left_join(police_numbers, \n            by = c(\"name\" = \"force_name\", \"year_match\" = \"year\")) %>% \n  select(name, year_ending, severity_score, population, officers) %>% \n  filter(year_ending >= ymd(\"2010-01-01\")) %>% \n  mutate(total_severity = as.numeric(severity_score) * population) %>% \n  select(name, year_ending, total_severity, officers) %>% \n\tmutate(\n\t  name = str_replace_all(name, \" and \", \" & \"),\n\t\tname = str_replace(name, \"^North \", \"N \"),\n\t\tname = str_replace(name, \"^South \", \"S \"),\n\t\tname = str_replace(name, \"^West \", \"W \"),\n\t\tname = str_replace(name, \" Yorkshire$\", \" Yorks\"),\n\t\tname = recode(name, \n  \t\t\"Avon & Somerset\" = \"Avon & Som\",\n\t\t\t\"Bedfordshire\" = \"Beds\",\n\t\t\t\"Cambridgeshire\" = \"Cambs\",\n\t\t\t\"Derbyshire\" = \"Derbys\",\n\t\t\t\"Devon & Cornwall\" = \"Dvn & Corn\",\n\t\t\t\"Gloucestershire\" = \"Gloucs\",\n\t\t\t\"Greater Manchester\" = \"G Mnchstr\",\n\t\t\t\"Hampshire\" = \"Hants\",\n\t  \t\"Hertfordshire\" = \"Herts\",\n\t\t\t\"Lancashire\" = \"Lancs\",\n\t\t\t\"Leicestershire\" = \"Leics\",\n\t\t\t\"Lincolnshire\" = \"Lincs\",\n  \t\t\"Metropolitan Police\" = \"Met Police\",\n  \t\t\"Northamptonshire\" = \"Northants\",\n\t\t\t\"Northumbria\" = \"Northumb\",\n\t\t\t\"Nottinghamshire\" = \"Notts\",\n\t\t\t\"Staffordshire\" = \"Staffs\",\n\t\t\t\"Thames Valley\" = \"Thames V\",\n\t\t\t\"Warwickshire\" = \"Warwicks\",\n\t\t\t\"W Midlands\" = \"W Mids\"\n  \t)\n\t)\n\nnational_severity <- severity_total %>% \n  group_by(year_ending) %>% \n  summarise_if(is.numeric, sum, na.rm = TRUE) %>% \n  mutate(national_severity_per_officer = total_severity / officers) %>% \n  select(year_ending, national_severity_per_officer)\n\n# calculate severity index\nseverity_per_officer <- severity_total %>% \n  left_join(national_severity, by = \"year_ending\") %>% \n  mutate(\n    severity_per_officer = total_severity / officers,\n    severity_index = severity_per_officer / first(national_severity_per_officer),\n    national_severity_index = national_severity_per_officer / first(national_severity_per_officer)\n  ) %>% \n  group_by(name) %>% \n  mutate(\n    # Change in force-level crime pressure for each year\n    change = perc_change(\n      first(severity_per_officer), \n      severity_per_officer, \n      format = FALSE\n    ),\n    # Difference between national and force-level crime pressure\n    diff = perc_change(\n      national_severity_per_officer,\n      severity_per_officer,\n      format = FALSE\n    )\n  ) %>% \n  ungroup() %>% \n  remove_missing(na.rm = TRUE)\n\n# order forces by most-recent severity index\nforces_in_order <- severity_per_officer %>% \n  filter(year(year_ending) == max(year(year_ending))) %>% \n  arrange(desc(severity_index)) %>% \n  pluck(\"name\")\nchart_data <- severity_per_officer %>% \n  group_by(name) %>%\n  mutate(\n    # Forces must be put in order before setting labels, since the code to \n    # generate the labels relies on the forces already being in order\n    name = factor(name, levels = forces_in_order),\n    category = factor(\n      case_when(\n        last(diff) > 0.1 ~ \"higher\",\n        last(diff) < -0.1 ~ \"lower\",\n        between(last(diff), -0.1, 0.1) ~ \"similar\",\n        TRUE ~ NA_character_\n      ), \n      levels = c(\"higher\", \"similar\", \"lower\")\n    ),\n    label = case_when(\n      year_ending == last(year_ending) & name == first(forces_in_order) ~ \n        str_glue(\"2010â€“21<br>change:<br>{scales::percent(change, accuracy = 1, style_positive = 'plus', style_negative = 'minus')}\"),\n      year_ending == last(year_ending) & is.numeric(change) ~ \n        str_glue(\"{scales::percent(change, accuracy = 1, style_positive = 'plus', style_negative = 'minus')}\"),\n      TRUE ~ NA_character_\n    )\n  ) %>% \n  ungroup() %>%\n  filter(name != \"G Mnchstr\")\n```\n\n```{r build plot}\nchart <- ggplot(chart_data) +\n  geom_hline(aes(yintercept = 1), size = 0.25) +\n  ggtext::geom_richtext(\n    aes(x = min(year_ending), y = max(severity_index), label = label),\n    na.rm = TRUE,\n    colour = \"grey10\",\n    fill = \"white\",\n    hjust = 0,\n    label.padding = unit(0.15, \"lines\"),\n    label.size = NA,\n    lineheight = 1,\n    size = elements$label_text_size * 0.9,\n    vjust = 1\n  ) +\n  geom_ribbon(\n    aes(\n      x = year_ending, \n      ymin = severity_index, \n      ymax = national_severity_index, \n      fill = category\n    ),\n    alpha = 0.5\n  ) +\n  geom_line(\n    aes(x = year_ending, y = national_severity_index),\n    linetype = \"21\"\n  ) +\n  geom_line(\n    aes(x = year_ending, y = severity_index, colour = category)\n  ) +\n  scale_x_date(date_breaks = \"4 years\", date_labels = \"%Y\") +\n  scale_y_continuous(\n    labels = scales::number_format(accuracy = 0.1, prefix = \"x\"),\n    expand = expansion(mult = c(0, 0))\n  ) +\n  scale_colour_manual(\n    values = c(\n      \"higher\" = ucl_colours_list[[\"Light Red\"]], \n      \"lower\" = ucl_colours_list[[\"Bright Green\"]], \n      \"similar\" = ucl_colours_list[[\"Light Blue\"]]\n    ),\n    labels = c(\n      \"higher\" = \">10% higher  \", \n      \"lower\" = \">10% lower  \", \n      \"similar\" = \"similar (+/-10%)  \"\n    ),\n    guide = guide_legend(title.hjust = 0, title.position = \"top\"),\n    aesthetics = c(\"colour\", \"fill\")\n  ) +\n  facet_wrap(vars(name)) +\n  labs(\n\t\ttitle = chart_details$title,\n\t\tsubtitle = format_subtitle(chart_details$subtitle, .width = 120),\n    caption = \"data for City of London Police and Greater Manchester Police are not available\",\n    x = NULL,\n    y = \"crime pressure relative to the 2010 national average\",\n    colour = \"compared to the national<br>average (dotted line), 2021<br>pressure in each force was:\",\n    fill = \"compared to the national<br>average (dotted line), 2021<br>pressure in each force was:\"\n  ) +\n  theme_cjcharts() +\n  theme(\n\t\taxis.text = element_text(size = 7),\n\t\tlegend.position = c(1, -0.03),\n\t\tlegend.justification = c(1, 0),\n\t\tlegend.key.width = unit(12, \"points\"), \n\t\t# legend.title = element_markdown(size = 9),\n\t\tpanel.spacing = unit(0.2, \"lines\"),\n\t\tplot.subtitle = element_textbox_simple(lineheight = 1, margin = margin(t = 6)),\n\t\tstrip.text = element_text(size = 8),\n\t\tstrip.background = element_blank()\n  )\n```\n\n\n`r chart_details$subtitle`\n\n```{r display plot, cache=FALSE, echo=FALSE, include=TRUE, warning=FALSE, fig.asp=1}\nadd_logo(chart + labs(title = NULL, subtitle = NULL), \n\t\t\t\t chart_details$source_title, chart_details$id)\n```\n\n[larger image](../`r chart_details$id`.png)\n| [annotated R code to produce this chart](https://github.com/mpjashby/lesscrime.info/blob/master/content/post/`r chart_details$id`.Rmd)\n\nData source: [`r chart_details$source_title`](`r chart_details$source_url`)\n\n```{r, echo=FALSE, include=TRUE, cache=FALSE}\nchart_data %>%\n  group_by(year_ending) %>% \n  summarise(across(c(\"total_severity\", \"officers\"), sum), .groups = \"drop\") %>% \n  mutate(\n    name = \"England & Wales\", \n    severity_per_officer = total_severity / officers\n  ) %>% \n  select(year_ending, name, severity_per_officer) %>% \n  bind_rows(select(chart_data, name, year_ending, severity_per_officer)) %>% \n  mutate(year_ending = year(year_ending)) %>% \n  pivot_wider(names_from = year_ending, values_from = severity_per_officer) %>% \n  left_join(\n    select(filter(chart_data, year_ending == last(year_ending)), name),\n    by = \"name\"\n  ) %>% \n  group_by(name) %>% \n  mutate(\n    label = perc_change(first(`2010`), last(`2021`)),\n    across(where(is.numeric), ~ scales::number(. / 1000, accuracy = 0.1)),\n    order = as.numeric(`2021`)\n  ) %>% \n  ungroup() %>% \n  arrange(desc(order)) %>% \n  select(-order) %>% \n  rename(`change, 2010â€“21` = label) %>% \n  gt::gt() %>% \n  gt::tab_header(\n    title = \"Crime severity per officer\"\n  ) %>% \n  gt::cols_align(align = \"right\") %>% \n  gt::cols_align(align = \"left\", columns = name) %>% \n  gt::tab_style(\n    style = list(gt::cell_text(weight = \"bold\")), \n    locations = gt::cells_body(rows = name == \"England & Wales\")\n  )\n```\n\n### Notes\n\nThe Office for National Statistics (ONS) publishes [estimates of the severity of different types of police-recorded crime](https://www.ons.gov.uk/peoplepopulationandcommunity/crimeandjustice/datasets/crimeseverityscoreexperimentalstatistics), derived from the average sentence imposed in court for each type of offence. In the same dataset, ONS publishes an overall estimate of the severity of crime per capita in each police force area. To convert this to an estimate of crime severity per officer (referred to above as _crime pressure_), severity per capita was multiplied by police force area population[^fn1] and then divided by the [number of full-time equivalent police officers in each force](https://www.gov.uk/government/collections/police-workforce-england-and-wales). Crime pressure is therefore defined as the severity of police-recorded crime per full-time equivalent officer.\n\nEstimates of the severity of different crimes are inherently limited, although they are likely to be more informative for some purposes than simply counting crimes (which implicitly assumes all crimes are of equal importance). For a further discussion of this, see [_Comparing methods for measuring crime harm/severity_](/publication/measuring_crime_harm/).\n\n[^fn1]: Police force area populations were calculated by aggregating [mid-year population estimates for local authorities](https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland) to police force areas using the ONS open geography portal [local authority to police force lookup table](https://geoportal.statistics.gov.uk/datasets/local-authority-district-to-community-safety-partnerships-to-police-force-areas-december-2018-lookup-in-england-and-wales).\n\n\n```{r export chart}\n# save PNG for social media\nggsave(\n\tfilename = paste0(chart_details$id, \".png\"), \n\tplot = add_logo(chart, chart_details$source_title, chart_details$id), \n\tdevice = \"png\", \n\twidth = 600 / 72, \n\theight = 600 / 72, \n\tunits = \"in\", \n\tbg = \"white\"\n)\n```\n","srcMarkdownNoYaml":"\n\n```{r set knitr options, include=FALSE}\nknitr::opts_chunk$set(cache = FALSE, include=FALSE)\n```\n\n```{r set chart parameters}\nchart_details <- list(\n\tid = \"crime-pressure-force-2022\",\n\ttitle = \"Most police forces are still handling higher crime-related demand\",\n\tsubtitle = \"One way to understand crime-related demands on police forces is to track 'crime pressure', a measure of investigative workload representing the number of crimes reported to a force per officer, weighted according to Office for National Statistics estimates of the relative severity of different crimes. Over the past decade years, this measure has risen in every police force in England and Wales â€“ doubling in many places. Crime pressure is now falling due to higher officer numbers, but in almost all forces it remains higher than in 2010.\",\n\tsource_url = \"https://www.ons.gov.uk/peoplepopulationandcommunity/crimeandjustice/datasets/crimeseverityscoreexperimentalstatistics\",\n\tsource_title = \"Office for National Statistics, 2021\"\n)\n```\n\n```{r load packages and helper}\n# custom packages not loaded by helpers.R\nlibrary(fable)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(janitor)\nlibrary(readxl)\nlibrary(tidyverse)\n\n# load this after loading custom packages\nsource(here::here(\"helpers.R\"))\n```\n\n```{r get and tidy data}\n\n# get severity score data\nif (!file.exists(paste0(chart_details$id, \"-data.csv.gz\"))) {\n  \n  # download data\n  # Source: https://www.ons.gov.uk/peoplepopulationandcommunity/crimeandjustice/datasets/crimeseverityscoreexperimentalstatistics\n  data_file <- tempfile(fileext = \".xls\")\n  download.file(\"https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/crimeandjustice/datasets/crimeseverityscoreexperimentalstatistics/current/datatool.xls\", destfile = data_file)\n  \n  # load data\n  file_data <- read_excel(data_file, sheet = \"Data - reg + pfa\", skip = 1)\n  \n  # tidy data\n  tidy_data <- file_data %>% \n    # extract only columns relevant to severity scores, not the adjacent table\n    # of offence rates\n    select(1:23) %>% \n    pivot_longer(c(-`Offence group`, -Code, -Name), names_to = \"year\", \n                 values_to = \"severity_score\") %>% \n    mutate(\n      # extract the month/year of the end of the data period\n      year_ending = str_trim(str_remove(str_extract(year, \"\\\\n.+?\\\\.{3}\"), \n                                        \"\\\\.{3}\")),\n      # convert this into a date\n      year_ending = parse_date(year_ending, format = \"%b '%y\"),\n      # convert date to final day of the month rather than the first\n      year_ending = year_ending + days_in_month(year_ending) - days(1)\n    ) %>% \n    # select(-year) %>% \n    clean_names()\n\t\n\t# save tidy data\n\twrite_csv(tidy_data, paste0(chart_details$id, \"-data.csv.gz\"))\t\n\t\n} else {\n\t\n\t# load tidy data\n\ttidy_data <- read_csv(paste0(chart_details$id, \"-data.csv.gz\"))\n\t\n}\t\n\n# get population data for local authorities, because population data aren't\n# published for police force areas\nif (!file.exists(paste0(chart_details$id, \"-pop-data.csv.gz\"))) {\n  \n  # download data\n  # Source: https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland\n  pop_data_file <- tempfile(fileext = \".xls\")\n  download.file(\"https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland/mid2020/ukpopestimatesmid2020on2021geography.xls\", destfile = pop_data_file)\n\n  # load data\n  pop_data <- pop_data_file %>% \n    read_excel(sheet = \"MYE 5\", skip = 7) %>% \n    janitor::clean_names() %>% \n    filter(\n      geography %in% c(\n        \"London Borough\", \"Metropolitan District\", \"Non-metropolitan District\", \n        \"Unitary Authority\"\n      )\n    ) %>% \n    select(code, name, starts_with(\"estimated_population_\")) %>% \n    pivot_longer(\n      cols = c(-code, -name), \n      names_to = \"year\", \n      values_to = \"population\", \n      names_prefix = \"estimated_population_mid_\"\n    )\n\n  # save tidy data\n\twrite_csv(pop_data, paste0(chart_details$id, \"-pop-data.csv.gz\"))\t\n  \n} else {\n\t\n\t# load tidy data\n\tpop_data <- read_csv(paste0(chart_details$id, \"-pop-data.csv.gz\"))\n\t\n}\n\n# load police numbers data\npolice_numbers <- here::here(\"post/police-uplift-2022/police-uplift-2022-data.csv.gz\") %>% \n  read_csv() %>% \n  # Filter only those rows that relate to counts in March of a year\n  filter(month(date) == 3) %>% \n  # Merge MPS and City Police because they're combined in the severity scores\n  mutate(\n    force_name = case_when(\n      force_name == \"Avon & Somerset\" ~ \"Avon and Somerset\",\n      force_name == \"Devon & Cornwall\" ~ \"Devon and Cornwall\",\n      force_name == \"London, City of\" ~ \"Metropolitan Police\",\n      TRUE ~ force_name\n    ),\n    year = year(date)\n  ) %>% \n  # Merge rows for each age/sex category\n  count(force_name, year, wt = total_fte, name = \"officers\")\n\n# get LAD to PFA lookup table\n# Source: https://geoportal.statistics.gov.uk/datasets/ons::local-authority-district-to-community-safety-partnerships-to-police-force-areas-december-2019-lookup-in-england-and-wales/about\npfa_lookup <- read_csv(\"https://opendata.arcgis.com/api/v3/datasets/66df1640526a4528a78736208daf83ed_0/downloads/data?format=csv&spatialRefId=4326&where=1%3D1\") %>%\n  clean_names() %>% \n  rename(la_code = lad18cd, pfa_code = pfa18cd, pfa_name = pfa18nm)\n```\n\n```{r prepare data for chart}\n# get population for police force areas\npfa_population <- pop_data %>% \n  left_join(pfa_lookup, by = c(\"code\" = \"la_code\")) %>% \n  # combine MPS and City Police because they're combined in the severity scores\n  mutate(\n    pfa_code = if_else(pfa_code == \"E23000034\", \"E23000001\", pfa_code),\n    pfa_name = if_else(pfa_name == \"London, City of\", \"Metropolitan Police\",\n                       pfa_name)\n  ) %>% \n  group_by(pfa_code, pfa_name, year) %>% \n  summarise(population = sum(population), .groups = \"drop\") %>% \n  # remove rows that represent Scottish/NI population, for which pfa18cd is NA\n  remove_missing(na.rm = TRUE) %>%\n  mutate(year = as.numeric(year))\n\nseverity <- tidy_data %>% \n  filter(\n    offence_group == \"Total recorded crime\",\n    # only severity estimates for police force areas\n    str_sub(code, 0, 3) %in% c(\"E23\", \"W15\"),\n    # exclude City Police, since its severity scores are included in the MPS\n    name != \"City of London\",\n    # only severity estimates for financial years\n    month(year_ending) == 3\n  ) %>% \n  select(code, name, year_ending, severity_score) %>% \n  mutate(severity_score = parse_number(severity_score))\n\nseverity_total <- severity %>% \n  # create a temporary column containing the year prior to year_ending, for\n  # matching to the appropriate *mid calendar year* population estimates\n  mutate(year_match = year(year_ending - years(1))) %>% \n  left_join(pfa_population, \n            by = c(\"code\" = \"pfa_code\", \"year_match\" = \"year\")) %>% \n  mutate(year_match = year_match + 1) %>% \n  left_join(police_numbers, \n            by = c(\"name\" = \"force_name\", \"year_match\" = \"year\")) %>% \n  select(name, year_ending, severity_score, population, officers) %>% \n  filter(year_ending >= ymd(\"2010-01-01\")) %>% \n  mutate(total_severity = as.numeric(severity_score) * population) %>% \n  select(name, year_ending, total_severity, officers) %>% \n\tmutate(\n\t  name = str_replace_all(name, \" and \", \" & \"),\n\t\tname = str_replace(name, \"^North \", \"N \"),\n\t\tname = str_replace(name, \"^South \", \"S \"),\n\t\tname = str_replace(name, \"^West \", \"W \"),\n\t\tname = str_replace(name, \" Yorkshire$\", \" Yorks\"),\n\t\tname = recode(name, \n  \t\t\"Avon & Somerset\" = \"Avon & Som\",\n\t\t\t\"Bedfordshire\" = \"Beds\",\n\t\t\t\"Cambridgeshire\" = \"Cambs\",\n\t\t\t\"Derbyshire\" = \"Derbys\",\n\t\t\t\"Devon & Cornwall\" = \"Dvn & Corn\",\n\t\t\t\"Gloucestershire\" = \"Gloucs\",\n\t\t\t\"Greater Manchester\" = \"G Mnchstr\",\n\t\t\t\"Hampshire\" = \"Hants\",\n\t  \t\"Hertfordshire\" = \"Herts\",\n\t\t\t\"Lancashire\" = \"Lancs\",\n\t\t\t\"Leicestershire\" = \"Leics\",\n\t\t\t\"Lincolnshire\" = \"Lincs\",\n  \t\t\"Metropolitan Police\" = \"Met Police\",\n  \t\t\"Northamptonshire\" = \"Northants\",\n\t\t\t\"Northumbria\" = \"Northumb\",\n\t\t\t\"Nottinghamshire\" = \"Notts\",\n\t\t\t\"Staffordshire\" = \"Staffs\",\n\t\t\t\"Thames Valley\" = \"Thames V\",\n\t\t\t\"Warwickshire\" = \"Warwicks\",\n\t\t\t\"W Midlands\" = \"W Mids\"\n  \t)\n\t)\n\nnational_severity <- severity_total %>% \n  group_by(year_ending) %>% \n  summarise_if(is.numeric, sum, na.rm = TRUE) %>% \n  mutate(national_severity_per_officer = total_severity / officers) %>% \n  select(year_ending, national_severity_per_officer)\n\n# calculate severity index\nseverity_per_officer <- severity_total %>% \n  left_join(national_severity, by = \"year_ending\") %>% \n  mutate(\n    severity_per_officer = total_severity / officers,\n    severity_index = severity_per_officer / first(national_severity_per_officer),\n    national_severity_index = national_severity_per_officer / first(national_severity_per_officer)\n  ) %>% \n  group_by(name) %>% \n  mutate(\n    # Change in force-level crime pressure for each year\n    change = perc_change(\n      first(severity_per_officer), \n      severity_per_officer, \n      format = FALSE\n    ),\n    # Difference between national and force-level crime pressure\n    diff = perc_change(\n      national_severity_per_officer,\n      severity_per_officer,\n      format = FALSE\n    )\n  ) %>% \n  ungroup() %>% \n  remove_missing(na.rm = TRUE)\n\n# order forces by most-recent severity index\nforces_in_order <- severity_per_officer %>% \n  filter(year(year_ending) == max(year(year_ending))) %>% \n  arrange(desc(severity_index)) %>% \n  pluck(\"name\")\nchart_data <- severity_per_officer %>% \n  group_by(name) %>%\n  mutate(\n    # Forces must be put in order before setting labels, since the code to \n    # generate the labels relies on the forces already being in order\n    name = factor(name, levels = forces_in_order),\n    category = factor(\n      case_when(\n        last(diff) > 0.1 ~ \"higher\",\n        last(diff) < -0.1 ~ \"lower\",\n        between(last(diff), -0.1, 0.1) ~ \"similar\",\n        TRUE ~ NA_character_\n      ), \n      levels = c(\"higher\", \"similar\", \"lower\")\n    ),\n    label = case_when(\n      year_ending == last(year_ending) & name == first(forces_in_order) ~ \n        str_glue(\"2010â€“21<br>change:<br>{scales::percent(change, accuracy = 1, style_positive = 'plus', style_negative = 'minus')}\"),\n      year_ending == last(year_ending) & is.numeric(change) ~ \n        str_glue(\"{scales::percent(change, accuracy = 1, style_positive = 'plus', style_negative = 'minus')}\"),\n      TRUE ~ NA_character_\n    )\n  ) %>% \n  ungroup() %>%\n  filter(name != \"G Mnchstr\")\n```\n\n```{r build plot}\nchart <- ggplot(chart_data) +\n  geom_hline(aes(yintercept = 1), size = 0.25) +\n  ggtext::geom_richtext(\n    aes(x = min(year_ending), y = max(severity_index), label = label),\n    na.rm = TRUE,\n    colour = \"grey10\",\n    fill = \"white\",\n    hjust = 0,\n    label.padding = unit(0.15, \"lines\"),\n    label.size = NA,\n    lineheight = 1,\n    size = elements$label_text_size * 0.9,\n    vjust = 1\n  ) +\n  geom_ribbon(\n    aes(\n      x = year_ending, \n      ymin = severity_index, \n      ymax = national_severity_index, \n      fill = category\n    ),\n    alpha = 0.5\n  ) +\n  geom_line(\n    aes(x = year_ending, y = national_severity_index),\n    linetype = \"21\"\n  ) +\n  geom_line(\n    aes(x = year_ending, y = severity_index, colour = category)\n  ) +\n  scale_x_date(date_breaks = \"4 years\", date_labels = \"%Y\") +\n  scale_y_continuous(\n    labels = scales::number_format(accuracy = 0.1, prefix = \"x\"),\n    expand = expansion(mult = c(0, 0))\n  ) +\n  scale_colour_manual(\n    values = c(\n      \"higher\" = ucl_colours_list[[\"Light Red\"]], \n      \"lower\" = ucl_colours_list[[\"Bright Green\"]], \n      \"similar\" = ucl_colours_list[[\"Light Blue\"]]\n    ),\n    labels = c(\n      \"higher\" = \">10% higher  \", \n      \"lower\" = \">10% lower  \", \n      \"similar\" = \"similar (+/-10%)  \"\n    ),\n    guide = guide_legend(title.hjust = 0, title.position = \"top\"),\n    aesthetics = c(\"colour\", \"fill\")\n  ) +\n  facet_wrap(vars(name)) +\n  labs(\n\t\ttitle = chart_details$title,\n\t\tsubtitle = format_subtitle(chart_details$subtitle, .width = 120),\n    caption = \"data for City of London Police and Greater Manchester Police are not available\",\n    x = NULL,\n    y = \"crime pressure relative to the 2010 national average\",\n    colour = \"compared to the national<br>average (dotted line), 2021<br>pressure in each force was:\",\n    fill = \"compared to the national<br>average (dotted line), 2021<br>pressure in each force was:\"\n  ) +\n  theme_cjcharts() +\n  theme(\n\t\taxis.text = element_text(size = 7),\n\t\tlegend.position = c(1, -0.03),\n\t\tlegend.justification = c(1, 0),\n\t\tlegend.key.width = unit(12, \"points\"), \n\t\t# legend.title = element_markdown(size = 9),\n\t\tpanel.spacing = unit(0.2, \"lines\"),\n\t\tplot.subtitle = element_textbox_simple(lineheight = 1, margin = margin(t = 6)),\n\t\tstrip.text = element_text(size = 8),\n\t\tstrip.background = element_blank()\n  )\n```\n\n\n`r chart_details$subtitle`\n\n```{r display plot, cache=FALSE, echo=FALSE, include=TRUE, warning=FALSE, fig.asp=1}\nadd_logo(chart + labs(title = NULL, subtitle = NULL), \n\t\t\t\t chart_details$source_title, chart_details$id)\n```\n\n[larger image](../`r chart_details$id`.png)\n| [annotated R code to produce this chart](https://github.com/mpjashby/lesscrime.info/blob/master/content/post/`r chart_details$id`.Rmd)\n\nData source: [`r chart_details$source_title`](`r chart_details$source_url`)\n\n```{r, echo=FALSE, include=TRUE, cache=FALSE}\nchart_data %>%\n  group_by(year_ending) %>% \n  summarise(across(c(\"total_severity\", \"officers\"), sum), .groups = \"drop\") %>% \n  mutate(\n    name = \"England & Wales\", \n    severity_per_officer = total_severity / officers\n  ) %>% \n  select(year_ending, name, severity_per_officer) %>% \n  bind_rows(select(chart_data, name, year_ending, severity_per_officer)) %>% \n  mutate(year_ending = year(year_ending)) %>% \n  pivot_wider(names_from = year_ending, values_from = severity_per_officer) %>% \n  left_join(\n    select(filter(chart_data, year_ending == last(year_ending)), name),\n    by = \"name\"\n  ) %>% \n  group_by(name) %>% \n  mutate(\n    label = perc_change(first(`2010`), last(`2021`)),\n    across(where(is.numeric), ~ scales::number(. / 1000, accuracy = 0.1)),\n    order = as.numeric(`2021`)\n  ) %>% \n  ungroup() %>% \n  arrange(desc(order)) %>% \n  select(-order) %>% \n  rename(`change, 2010â€“21` = label) %>% \n  gt::gt() %>% \n  gt::tab_header(\n    title = \"Crime severity per officer\"\n  ) %>% \n  gt::cols_align(align = \"right\") %>% \n  gt::cols_align(align = \"left\", columns = name) %>% \n  gt::tab_style(\n    style = list(gt::cell_text(weight = \"bold\")), \n    locations = gt::cells_body(rows = name == \"England & Wales\")\n  )\n```\n\n### Notes\n\nThe Office for National Statistics (ONS) publishes [estimates of the severity of different types of police-recorded crime](https://www.ons.gov.uk/peoplepopulationandcommunity/crimeandjustice/datasets/crimeseverityscoreexperimentalstatistics), derived from the average sentence imposed in court for each type of offence. In the same dataset, ONS publishes an overall estimate of the severity of crime per capita in each police force area. To convert this to an estimate of crime severity per officer (referred to above as _crime pressure_), severity per capita was multiplied by police force area population[^fn1] and then divided by the [number of full-time equivalent police officers in each force](https://www.gov.uk/government/collections/police-workforce-england-and-wales). Crime pressure is therefore defined as the severity of police-recorded crime per full-time equivalent officer.\n\nEstimates of the severity of different crimes are inherently limited, although they are likely to be more informative for some purposes than simply counting crimes (which implicitly assumes all crimes are of equal importance). For a further discussion of this, see [_Comparing methods for measuring crime harm/severity_](/publication/measuring_crime_harm/).\n\n[^fn1]: Police force area populations were calculated by aggregating [mid-year population estimates for local authorities](https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland) to police force areas using the ONS open geography portal [local authority to police force lookup table](https://geoportal.statistics.gov.uk/datasets/local-authority-district-to-community-safety-partnerships-to-police-force-areas-december-2018-lookup-in-england-and-wales).\n\n\n```{r export chart}\n# save PNG for social media\nggsave(\n\tfilename = paste0(chart_details$id, \".png\"), \n\tplot = add_logo(chart, chart_details$source_title, chart_details$id), \n\tdevice = \"png\", \n\twidth = 600 / 72, \n\theight = 600 / 72, \n\tunits = \"in\", \n\tbg = \"white\"\n)\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","author":[{"name":"Matt Ashby"},"Matt Ashby"],"theme":["sandstone","../../custom.scss"],"date-format":"D MMM YYYY","title":"Most police forces are still handling higher crime-related demand","date":"2022-08-18","categories":["Crime and justice chart of the week"],"tags":["crime","crime pressure","crime severity","police"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}