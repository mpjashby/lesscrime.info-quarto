---
title: "Chart: Largest real police pay rise in 20 years, but effects of previous cuts linger"
date: "2024-07-29"
tags:
  - criminal justice
  - police
execute: 
  echo: false
  include: false
  warning: false
lightbox: true
---


```{r set chart parameters}
chart_details <- list(
	id = "police-pay-2024",
	title = "Largest real police pay rise in 20 years, but effects of previous cuts linger",
	subtitle = "The Home Office has announced a 4.75% increase in police pay for 2024 (a real-terms rise of about 2.3%). That means a police constable who has just completed initial training in England and Wales will be paid about £7,900 less in 2024 than they would have been in 2010, once inflation is taken into account -- a real-terms reduction of 21%. These figures exclude overtime and special allowances, but those are unlikely to have made up for decreases in basic pay.",
	source_url = "https://www.gov.uk/government/publications/police-remuneration-review-body-report-2024-england-and-wales",
	source_title = "Police Federation, Home Office"
)
```

```{r load packages and helper, include=FALSE}
# custom packages not loaded by helpers.R
library(readxl)

# load this after loading custom packages
source(here::here("helpers.R"))
```

```{r get and tidy data}
if (!file.exists(paste0(chart_details$id, "-data.csv.gz"))) {
	
	# the data are provided as a series of scanned PDFs of Federation circulars,
	# so must be entered manually
	# 2019 police data from https://www.gov.uk/government/publications/police-remuneration-review-body-report-2019-england-and-wales
	police_pay <- tribble(
		~date, ~new, ~mid, ~top,
		# "2005-04-01", 22107, 31092,
		"2005-09-01", 22770, 27213, 32025,
		"2006-09-01", 23454, 28029, 32985,
		"2007-12-01", 24039, 28731, 33810,
		"2008-09-01", 24675, 29493, 34707,
		"2009-09-01", 25317, 30261, 35610,
		"2010-09-01", 25962, 31032, 36519,
		"2011-09-01", 25962, 31032, 36519,
		"2012-09-01", 25962, 31032, 36519,
		# "2013-04-01", 22000, 36885,
		"2013-09-01", 22221, 31341, 36885,
		"2014-09-01", 22443, 31653, 37254,
		"2015-09-01", 22668, 31971, 37626,
		"2016-09-01", 22896, 31971, 37626,
		"2017-09-01", 23124, 32616, 38382,
		# From 2018 onwards, PCs with 5 years' service are on post-2013 pay scale
		# Officers with 5 years' service will be at point 6 on new scale
		"2018-09-01", 23586, 33267, 39150,
		"2019-09-01", 24177, 34098, 40128,
		"2020-09-01", 24780, 34950, 41130,
		"2021-09-01", 24780, 34950, 41130,
		"2022-09-01", 26682, 36852, 43032,
		# From 2023 there is no point zero, so officers start on pay point one
		"2023-09-01", 28551, 39432, 46044,
		"2024-09-01", 29907, 41304, 48231
	) |> 
	  pivot_longer(cols = -date, names_to = "service", values_to = "pay") |> 
		mutate(date = ymd(date), year = year(date))
	
	# Get ONS CPIH inflation indices, where 2015 = 100
	# Source: https://www.ons.gov.uk/economy/inflationandpriceindices/timeseries/l522/mm23
	deflator <- read_csv(
	  "https://www.ons.gov.uk/generator?format=csv&uri=/economy/inflationandpriceindices/timeseries/l522/mm23", 
	  skip = 8, 
	  col_names = c("year", "index")
	 ) |> 
	  mutate(year = parse_number(year)) |> 
	  summarise(index = mean(index), .by = year)
	
	# adjust pay for inflation using method described at 
	# https://researchbriefings.parliament.uk/ResearchBriefing/Summary/SN04962
	tidy_data <- police_pay |> 
		left_join(deflator, by = "year") |> 
		mutate(
			date = as_date(if_else(is.na(date), ymd(paste(year, "04 01")), date)),
			index19 = index / last(index),
			pay_adj = pay / index19
		)
	
	# save tidy data
	write_csv(tidy_data, paste0(chart_details$id, "-data.csv.gz"))	

} else {
	
	# load tidy data
	tidy_data <- read_csv(paste0(chart_details$id, "-data.csv.gz"))
	
}

```

```{r prepare data for chart}
chart_data <- tidy_data |> 
	mutate(
		date = ymd(paste(year, "09", "01")),
		party = case_when(
			year < 2010 ~ "Labour",
			between(year, 2010, 2015) ~ "Coalition",
			between(year, 2016, 2023) ~ "Conservative",
			year >= 2024 ~ "Labour"
		),
		party = factor(party, levels = c("Labour", "Coalition", "Conservative")),
		service = fct_case_when(
			service == "new" ~ "pay after initial training",
			service == "mid" ~ "pay after 5 years' service",
			service == "top" ~ "pay after 10 years' service",
			TRUE ~ NA_character_
		)
	) |> 
	# calculate changes
	mutate(
		perc_change = (pay_adj - lag(pay_adj)) / lag(pay_adj),
		cash_change = (pay_adj - lag(pay_adj)),
		perc_change = ifelse(year == first(year), NA, perc_change),
		cash_change = ifelse(year == first(year), NA, cash_change),
		change_label = scales::comma(cash_change, accuracy = 1),
		change_label = case_when(
			year == first(year) ~ scales::comma(pay_adj, accuracy = 1, prefix = " £", suffix = " in 2024 terms"),
			cash_change > 0 ~ paste0(" +", change_label),
			cash_change < 0 ~ str_replace(change_label, "^-", " –"),
			TRUE ~ ""
		),
		change_label = ifelse(
			year == last(year), 
			paste0(
				change_label, 
				" = ", 
				scales::comma(pay_adj, accuracy = 1, prefix = "£"),
				" (",
				perc_change(first(pay_adj), last(pay_adj), accuracy = 1, style_negative = "minus"),
				")"
			), 
			change_label
		),
		.by = service
	)

# RULES FOR CHART LABELS
# Label positions must be calculated manually, using the space created by 
# calling expand_scale() on the relevant scale(s). `curve` can either be 'left',
# 'right' or 'straight' and these will be plotted by separate calls to 
# `geom_curve()` or `geom_segment()` since the direction of curvature cannot be
# set via an aesthetic

# add chart labels
chart_labels <- tribble(
	~x, ~y, ~xend, ~yend, ~service, ~label, ~hjust, ~vjust, ~curve,
	ymd("2005-09-01"), 38000, ymd("2006-09-01"), 50000, "pay after initial training", balance_lines(paste("an officer completing training in 2005 earned the equivalent of", scales::dollar(pluck(filter(tidy_data, service == "new", year == 2005), "pay_adj", 1), accuracy = 100, prefix = "£"), "at 2024 prices"), 2), "left", "bottom", "left",
	ymd("2013-09-01"), 30000, ymd("2014-03-01"), 34000, "pay after initial training", balance_lines("in 2013, salaries for new officers were reduced substantially", 4), "left", "bottom", "left",
	ymd("2010-09-01"), 46000, ymd("2011-03-01"), 50000, "pay after 5 years' service", balance_lines("in 2010, a pay freeze began to erode salaries for existing officers in real terms", 4), "left", "bottom", "left",
	ymd("2022-09-01"), 47500, ymd("2022-09-01"), 53500, "pay after 10 years' service", balance_lines("below-inflation increases have reduced salaries further since the pay freeze ended", 3), "right", "bottom", "right"
) |> 
	mutate(
		party = "Labour",
		service = factor(service, levels = levels(chart_data$service))
	)
```

```{r calculations for title, include=FALSE}
# Percentage and absolute differences in pay for title and subtitle
tidy_data |> 
  group_by(service) |> 
  mutate(
    pay_diff = pay_adj - first(pay_adj), 
    pay_diff_perc = pay_diff / first(pay_adj)
  ) %>%
  ungroup() |> 
  filter(service == "new", year == last(year))
```

```{r build plot}
chart <- chart_data |> 
	ggplot(aes(date, pay_adj, fill = party)) + 
	geom_col() + 
	geom_text(
	  aes(label = change_label), 
	  colour = "white", 
	  size = elements$label_text_size * 0.9, 
	  angle = -90, 
	  hjust = 0
	 ) +
	# add explanatory labels
	geom_curve(
	  aes(x = x, y = y, xend = xend, yend = yend),
		data = filter(chart_labels, curve == "right"), 
		inherit.aes = FALSE,
		curvature = elements$label_line_curvature,
		colour = elements$label_line_colour,
		arrow = elements$label_arrow, 
		show.legend = FALSE
	) +
	geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
						 data = filter(chart_labels, curve == "straight"),
						 inherit.aes = FALSE, colour = elements$label_line_colour,
						 arrow = elements$label_arrow, show.legend = FALSE) +
	geom_curve(aes(x = x, y = y, xend = xend, yend = yend),
						 data = filter(chart_labels, curve == "left"), inherit.aes = FALSE,
						 curvature = elements$label_line_curvature * -1,
						 colour = elements$label_line_colour,
						 arrow = elements$label_arrow, show.legend = FALSE) +
	geom_label(aes(x = xend, y = yend, label = label, hjust = hjust,
								 vjust = vjust),
						data = chart_labels, inherit.aes = FALSE,
						colour = elements$label_text_colour,
						fill = elements$label_text_fill, size = elements$label_text_size,
						lineheight = elements$label_text_lineheight,
						label.size = NA, show.legend = FALSE) +
	# end of explanatory labels
	coord_cartesian(clip = "off") +
	scale_x_date(date_breaks = "2 years", date_labels = "'%y", 
							 expand = expansion(mult = c(0, 0.01))) +
	scale_y_continuous(
		breaks = seq(0, 58e3, by = 5e3),
		labels = scales::number_format(accuracy = 1, scale = 1/1000, prefix = "£", suffix = "k"),
		limits = c(0, NA), 
		expand = expansion(add = c(0, 6500))
	) + 
	scale_fill_manual(
		values = c("Labour" = "#DC241F", "Coalition" = "#8DB9CA",
							 "Conservative" = "#0087DC"),
		labels = c("Labour" = "Labour, 1997–2010 & 2024–  ", 
							 "Coalition" = "Coalition, 2010–2015  ", 
							 "Conservative" = "Conservative, 2015–2024  ")
	) +
	facet_grid(cols = vars(service)) +
	labs(
		title = chart_details$title,
		subtitle = chart_details$subtitle,
		legend = NULL,
		x = NULL,
		y = "gross salary before allowances, inflation adjusted to 2024 values",
		fill = NULL
	) +
	theme_cjcharts() +
	theme(
	  legend.margin = margin(),
	  legend.box.margin = margin(),
		panel.grid.major = element_blank(),
		panel.grid.minor = element_blank(),
		plot.title = ggtext::element_textbox_simple(),
		plot.subtitle = ggtext::element_textbox_simple(margin = margin(t = 12, b = 6))
	)

```

`r chart_details$subtitle`

```{r display plot}
#| include: true

add_logo(chart + labs(title = NULL, subtitle = NULL), 
				 chart_details$source_title, chart_details$id)
```

[larger image](`r chart_details$id`.png)
| [annotated R code to produce this chart](https://github.com/mpjashby/lesscrime.info-quarto/blob/main/post/`r chart_details$id`/index.qmd)

Data source: [`r chart_details$source_title`](`r chart_details$source_url`)

Pay for previous years has been adjusted for inflation using the [Office for
National Statistics preferred CPIH measure](https://www.ons.gov.uk/economy/inflationandpriceindices/timeseries/l522/mm23).

```{r export chart}
# save PNG for social media
ggsave(
	filename = paste0(chart_details$id, ".png"), 
	plot = add_logo(chart, chart_details$source_title, chart_details$id), 
	device = "png", width = 600 / 72, height = 500 / 72, units = "in", bg = "white"
)
```
